{
    "KSampler": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709552000
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 100
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_2m",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "karras",
                        "normal",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "denoise": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 1,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "KSampler",
        "description": "",
        "category": "sampling"
    },
    "CheckpointLoader": {
        "input": {
            "required": {
                "config_name": [
                    [
                        "anything_v3.yaml",
                        "v1-inference.yaml",
                        "v1-inference_clip_skip_2.yaml",
                        "v1-inference_clip_skip_2_fp16.yaml",
                        "v1-inference_fp16.yaml",
                        "v1-inpainting-inference.yaml",
                        "v2-inference-v.yaml",
                        "v2-inference-v_fp32.yaml",
                        "v2-inference.yaml",
                        "v2-inference_fp32.yaml",
                        "v2-inpainting-inference.yaml"
                    ]
                ],
                "ckpt_name": [
                    [
                        "AbyssOrangeMix2_hard.safetensors",
                        "v1-5-pruned-emaonly.ckpt"
                    ]
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoader",
        "description": "",
        "category": "loaders"
    },
    "CheckpointLoaderSimple": {
        "input": {
            "required": {
                "ckpt_name": [
                    [
                        "AbyssOrangeMix2_hard.safetensors",
                        "v1-5-pruned-emaonly.ckpt"
                    ]
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP",
            "VAE"
        ],
        "name": "CheckpointLoaderSimple",
        "description": "",
        "category": "loaders"
    },
    "CLIPTextEncode": {
        "input": {
            "required": {
                "text": [
                    "STRING",
                    {
                        "multiline": true,
                        "dynamic_prompt": true
                    }
                ],
                "clip": [
                    "CLIP"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "name": "CLIPTextEncode",
        "description": "",
        "category": "conditioning"
    },
    "CLIPSetLastLayer": {
        "input": {
            "required": {
                "clip": [
                    "CLIP"
                ],
                "stop_at_clip_layer": [
                    "INT",
                    {
                        "default": -1,
                        "min": -24,
                        "max": -1,
                        "step": 1
                    }
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "name": "CLIPSetLastLayer",
        "description": "",
        "category": "conditioning"
    },
    "VAEDecode": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "name": "VAEDecode",
        "description": "",
        "category": "latent"
    },
    "VAEEncode": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "VAEEncode",
        "description": "",
        "category": "latent"
    },
    "VAEEncodeForInpaint": {
        "input": {
            "required": {
                "pixels": [
                    "IMAGE"
                ],
                "vae": [
                    "VAE"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "VAEEncodeForInpaint",
        "description": "",
        "category": "latent/inpaint"
    },
    "VAELoader": {
        "input": {
            "required": {
                "vae_name": [
                    [
                        "vae-ft-mse-840000-ema-pruned.safetensors"
                    ]
                ]
            }
        },
        "output": [
            "VAE"
        ],
        "name": "VAELoader",
        "description": "",
        "category": "loaders"
    },
    "EmptyLatentImage": {
        "input": {
            "required": {
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "batch_size": [
                    "INT",
                    {
                        "default": 1,
                        "min": 1,
                        "max": 64
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "EmptyLatentImage",
        "description": "",
        "category": "latent"
    },
    "LatentUpscale": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "LatentUpscale",
        "description": "",
        "category": "latent"
    },
    "SaveImage": {
        "input": {
            "required": {
                "images": [
                    "IMAGE"
                ],
                "filename_prefix": [
                    "STRING",
                    {
                        "default": "ComfyUI"
                    }
                ]
            },
            "hidden": {
                "prompt": "PROMPT",
                "extra_pnginfo": "EXTRA_PNGINFO"
            }
        },
        "output": [],
        "name": "SaveImage",
        "description": "",
        "category": "image"
    },
    "LoadImage": {
        "input": {
            "required": {
                "image": [
                    [
                        "example.png"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "name": "LoadImage",
        "description": "",
        "category": "image"
    },
    "LoadImageMask": {
        "input": {
            "required": {
                "image": [
                    [
                        "example.png"
                    ]
                ],
                "channel": [
                    [
                        "alpha",
                        "red",
                        "green",
                        "blue"
                    ]
                ]
            }
        },
        "output": [
            "MASK"
        ],
        "name": "LoadImageMask",
        "description": "",
        "category": "image"
    },
    "ImageScale": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ],
                "upscale_method": [
                    [
                        "nearest-exact",
                        "bilinear",
                        "area"
                    ]
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 1,
                        "max": 4096,
                        "step": 1
                    }
                ],
                "crop": [
                    [
                        "disabled",
                        "center"
                    ]
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "name": "ImageScale",
        "description": "",
        "category": "image"
    },
    "ImageInvert": {
        "input": {
            "required": {
                "image": [
                    "IMAGE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "name": "ImageInvert",
        "description": "",
        "category": "image"
    },
    "ConditioningCombine": {
        "input": {
            "required": {
                "conditioning_1": [
                    "CONDITIONING"
                ],
                "conditioning_2": [
                    "CONDITIONING"
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "name": "ConditioningCombine",
        "description": "",
        "category": "conditioning"
    },
    "ConditioningSetArea": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "width": [
                    "INT",
                    {
                        "default": 64,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 64,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "name": "ConditioningSetArea",
        "description": "",
        "category": "conditioning"
    },
    "KSamplerAdvanced": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "add_noise": [
                    [
                        "enable",
                        "disable"
                    ]
                ],
                "noise_seed": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 18446744073709552000
                    }
                ],
                "steps": [
                    "INT",
                    {
                        "default": 20,
                        "min": 1,
                        "max": 10000
                    }
                ],
                "cfg": [
                    "FLOAT",
                    {
                        "default": 8,
                        "min": 0,
                        "max": 100
                    }
                ],
                "sampler_name": [
                    [
                        "euler",
                        "euler_ancestral",
                        "heun",
                        "dpm_2",
                        "dpm_2_ancestral",
                        "lms",
                        "dpm_fast",
                        "dpm_adaptive",
                        "dpmpp_2s_ancestral",
                        "dpmpp_sde",
                        "dpmpp_2m",
                        "ddim",
                        "uni_pc",
                        "uni_pc_bh2"
                    ]
                ],
                "scheduler": [
                    [
                        "karras",
                        "normal",
                        "simple",
                        "ddim_uniform"
                    ]
                ],
                "positive": [
                    "CONDITIONING"
                ],
                "negative": [
                    "CONDITIONING"
                ],
                "latent_image": [
                    "LATENT"
                ],
                "start_at_step": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "end_at_step": [
                    "INT",
                    {
                        "default": 10000,
                        "min": 0,
                        "max": 10000
                    }
                ],
                "return_with_leftover_noise": [
                    [
                        "disable",
                        "enable"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "KSamplerAdvanced",
        "description": "",
        "category": "sampling"
    },
    "SetLatentNoiseMask": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "mask": [
                    "MASK"
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "SetLatentNoiseMask",
        "description": "",
        "category": "latent/inpaint"
    },
    "LatentComposite": {
        "input": {
            "required": {
                "samples_to": [
                    "LATENT"
                ],
                "samples_from": [
                    "LATENT"
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 8
                    }
                ],
                "feather": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "LatentComposite",
        "description": "",
        "category": "latent"
    },
    "LatentRotate": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "rotation": [
                    [
                        "none",
                        "90 degrees",
                        "180 degrees",
                        "270 degrees"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "LatentRotate",
        "description": "",
        "category": "latent"
    },
    "LatentFlip": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "flip_method": [
                    [
                        "x-axis: vertically",
                        "y-axis: horizontally"
                    ]
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "LatentFlip",
        "description": "",
        "category": "latent"
    },
    "LatentCrop": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "width": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "height": [
                    "INT",
                    {
                        "default": 512,
                        "min": 64,
                        "max": 4096,
                        "step": 64
                    }
                ],
                "x": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 8
                    }
                ],
                "y": [
                    "INT",
                    {
                        "default": 0,
                        "min": 0,
                        "max": 4096,
                        "step": 8
                    }
                ]
            }
        },
        "output": [
            "LATENT"
        ],
        "name": "LatentCrop",
        "description": "",
        "category": "latent"
    },
    "LoraLoader": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "clip": [
                    "CLIP"
                ],
                "lora_name": [
                    []
                ],
                "strength_model": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10,
                        "step": 0.01
                    }
                ],
                "strength_clip": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "MODEL",
            "CLIP"
        ],
        "name": "LoraLoader",
        "description": "",
        "category": "loaders"
    },
    "CLIPLoader": {
        "input": {
            "required": {
                "clip_name": [
                    []
                ]
            }
        },
        "output": [
            "CLIP"
        ],
        "name": "CLIPLoader",
        "description": "",
        "category": "loaders"
    },
    "ControlNetApply": {
        "input": {
            "required": {
                "conditioning": [
                    "CONDITIONING"
                ],
                "control_net": [
                    "CONTROL_NET"
                ],
                "image": [
                    "IMAGE"
                ],
                "strength": [
                    "FLOAT",
                    {
                        "default": 1,
                        "min": 0,
                        "max": 10,
                        "step": 0.01
                    }
                ]
            }
        },
        "output": [
            "CONDITIONING"
        ],
        "name": "ControlNetApply",
        "description": "",
        "category": "conditioning"
    },
    "ControlNetLoader": {
        "input": {
            "required": {
                "control_net_name": [
                    []
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "name": "ControlNetLoader",
        "description": "",
        "category": "loaders"
    },
    "DiffControlNetLoader": {
        "input": {
            "required": {
                "model": [
                    "MODEL"
                ],
                "control_net_name": [
                    []
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "name": "DiffControlNetLoader",
        "description": "",
        "category": "loaders"
    },
    "T2IAdapterLoader": {
        "input": {
            "required": {
                "t2i_adapter_name": [
                    []
                ]
            }
        },
        "output": [
            "CONTROL_NET"
        ],
        "name": "T2IAdapterLoader",
        "description": "",
        "category": "loaders"
    },
    "VAEDecodeTiled": {
        "input": {
            "required": {
                "samples": [
                    "LATENT"
                ],
                "vae": [
                    "VAE"
                ]
            }
        },
        "output": [
            "IMAGE"
        ],
        "name": "VAEDecodeTiled",
        "description": "",
        "category": "_for_testing"
    }
}